// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Product {
  id            String     @id @default(uuid())
  amountInStock Int
  name          String
  company       String
  description   String
  featured      Boolean
  image         String
  price         Decimal
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  clerkId       String
  favorite      Favorite[]
  reviews       Review[]
  cartItems     CartItem[]
}

model Favorite {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  clerkId   String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
}

model Review {
  id           String   @id @default(uuid())
  rating       Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  clerkId      String
  comment      String
  authorName   String
  authorAvatar String
  product      Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId    String
}

model Cart {
  id             String     @id @default(uuid())
  clerkId        String
  cartItems      CartItem[]
  numItemsInCart Int        @default(0)
  cartTotal      Decimal    @default(0)
  shipping       Decimal    @default(4.99)
  tax            Decimal    @default(0)
  taxRate        Decimal    @default(0.08)
  orderTotal     Decimal    @default(0)
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}

model CartItem {
  id        String   @id @default(uuid())
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
  cart      Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId    String
  amount    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
